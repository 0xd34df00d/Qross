//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QTextTableCellFormat")]
    public class QTextTableCellFormat : QTextCharFormat, IDisposable {
        protected QTextTableCellFormat(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QTextTableCellFormat), this);
        }
        public QTextTableCellFormat() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QTextTableCellFormat", "QTextTableCellFormat()", typeof(void));
        }
        public new bool IsValid() {
            return (bool) interceptor.Invoke("isValid", "isValid() const", typeof(bool));
        }
        public void SetTopPadding(double padding) {
            interceptor.Invoke("setTopPadding$", "setTopPadding(qreal)", typeof(void), typeof(double), padding);
        }
        public double TopPadding() {
            return (double) interceptor.Invoke("topPadding", "topPadding() const", typeof(double));
        }
        public void SetBottomPadding(double padding) {
            interceptor.Invoke("setBottomPadding$", "setBottomPadding(qreal)", typeof(void), typeof(double), padding);
        }
        public double BottomPadding() {
            return (double) interceptor.Invoke("bottomPadding", "bottomPadding() const", typeof(double));
        }
        public void SetLeftPadding(double padding) {
            interceptor.Invoke("setLeftPadding$", "setLeftPadding(qreal)", typeof(void), typeof(double), padding);
        }
        public double LeftPadding() {
            return (double) interceptor.Invoke("leftPadding", "leftPadding() const", typeof(double));
        }
        public void SetRightPadding(double padding) {
            interceptor.Invoke("setRightPadding$", "setRightPadding(qreal)", typeof(void), typeof(double), padding);
        }
        public double RightPadding() {
            return (double) interceptor.Invoke("rightPadding", "rightPadding() const", typeof(double));
        }
        public void SetPadding(double padding) {
            interceptor.Invoke("setPadding$", "setPadding(qreal)", typeof(void), typeof(double), padding);
        }
        public QTextTableCellFormat(QTextFormat fmt) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QTextTableCellFormat#", "QTextTableCellFormat(const QTextFormat&)", typeof(void), typeof(QTextFormat), fmt);
        }
        ~QTextTableCellFormat() {
            interceptor.Invoke("~QTextTableCellFormat", "~QTextTableCellFormat()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QTextTableCellFormat", "~QTextTableCellFormat()", typeof(void));
        }
    }
}
