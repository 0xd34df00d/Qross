//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    using System.Collections.Generic;
    [SmokeClass("QInputContextFactoryInterface")]
    public abstract class QInputContextFactoryInterface : QFactoryInterface {
        protected QInputContextFactoryInterface(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QInputContextFactoryInterface), this);
        }
        [SmokeMethod("create(const QString&)")]
        public abstract QInputContext Create(string key);
        [SmokeMethod("languages(const QString&)")]
        public abstract List<string> Languages(string key);
        [SmokeMethod("displayName(const QString&)")]
        public abstract string DisplayName(string key);
        [SmokeMethod("description(const QString&)")]
        public abstract string Description(string key);
        public QInputContextFactoryInterface() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QInputContextFactoryInterface", "QInputContextFactoryInterface()", typeof(void));
        }
    }
}
