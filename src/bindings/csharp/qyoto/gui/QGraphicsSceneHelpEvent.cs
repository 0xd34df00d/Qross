//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QGraphicsSceneHelpEvent")]
    public class QGraphicsSceneHelpEvent : QGraphicsSceneEvent, IDisposable {
        protected QGraphicsSceneHelpEvent(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QGraphicsSceneHelpEvent), this);
        }
        public QGraphicsSceneHelpEvent(QEvent.TypeOf type) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSceneHelpEvent$", "QGraphicsSceneHelpEvent(QEvent::Type)", typeof(void), typeof(QEvent.TypeOf), type);
        }
        public QGraphicsSceneHelpEvent() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QGraphicsSceneHelpEvent", "QGraphicsSceneHelpEvent()", typeof(void));
        }
        public QPointF ScenePos() {
            return (QPointF) interceptor.Invoke("scenePos", "scenePos() const", typeof(QPointF));
        }
        public void SetScenePos(QPointF pos) {
            interceptor.Invoke("setScenePos#", "setScenePos(const QPointF&)", typeof(void), typeof(QPointF), pos);
        }
        public QPoint ScreenPos() {
            return (QPoint) interceptor.Invoke("screenPos", "screenPos() const", typeof(QPoint));
        }
        public void SetScreenPos(QPoint pos) {
            interceptor.Invoke("setScreenPos#", "setScreenPos(const QPoint&)", typeof(void), typeof(QPoint), pos);
        }
        ~QGraphicsSceneHelpEvent() {
            interceptor.Invoke("~QGraphicsSceneHelpEvent", "~QGraphicsSceneHelpEvent()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QGraphicsSceneHelpEvent", "~QGraphicsSceneHelpEvent()", typeof(void));
        }
    }
}
