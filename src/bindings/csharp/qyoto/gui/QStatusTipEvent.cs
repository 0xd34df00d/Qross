//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QStatusTipEvent")]
    public class QStatusTipEvent : QEvent, IDisposable {
        protected QStatusTipEvent(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QStatusTipEvent), this);
        }
        public QStatusTipEvent(string tip) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStatusTipEvent$", "QStatusTipEvent(const QString&)", typeof(void), typeof(string), tip);
        }
        public string Tip() {
            return (string) interceptor.Invoke("tip", "tip() const", typeof(string));
        }
        ~QStatusTipEvent() {
            interceptor.Invoke("~QStatusTipEvent", "~QStatusTipEvent()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QStatusTipEvent", "~QStatusTipEvent()", typeof(void));
        }
    }
}
