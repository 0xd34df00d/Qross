//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QTextInlineObject")]
    public class QTextInlineObject : Object, IDisposable {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected QTextInlineObject(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QTextInlineObject), this);
        }
        // QTextInlineObject* QTextInlineObject(int arg1,QTextEngine* arg2); >>>> NOT CONVERTED
        public QTextInlineObject() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QTextInlineObject", "QTextInlineObject()", typeof(void));
        }
        public bool IsValid() {
            return (bool) interceptor.Invoke("isValid", "isValid() const", typeof(bool));
        }
        public QRectF Rect() {
            return (QRectF) interceptor.Invoke("rect", "rect() const", typeof(QRectF));
        }
        public double Width() {
            return (double) interceptor.Invoke("width", "width() const", typeof(double));
        }
        public double Ascent() {
            return (double) interceptor.Invoke("ascent", "ascent() const", typeof(double));
        }
        public double Descent() {
            return (double) interceptor.Invoke("descent", "descent() const", typeof(double));
        }
        public double Height() {
            return (double) interceptor.Invoke("height", "height() const", typeof(double));
        }
        public Qt.LayoutDirection TextDirection() {
            return (Qt.LayoutDirection) interceptor.Invoke("textDirection", "textDirection() const", typeof(Qt.LayoutDirection));
        }
        public void SetWidth(double w) {
            interceptor.Invoke("setWidth$", "setWidth(qreal)", typeof(void), typeof(double), w);
        }
        public void SetAscent(double a) {
            interceptor.Invoke("setAscent$", "setAscent(qreal)", typeof(void), typeof(double), a);
        }
        public void SetDescent(double d) {
            interceptor.Invoke("setDescent$", "setDescent(qreal)", typeof(void), typeof(double), d);
        }
        public int TextPosition() {
            return (int) interceptor.Invoke("textPosition", "textPosition() const", typeof(int));
        }
        public int FormatIndex() {
            return (int) interceptor.Invoke("formatIndex", "formatIndex() const", typeof(int));
        }
        public QTextFormat Format() {
            return (QTextFormat) interceptor.Invoke("format", "format() const", typeof(QTextFormat));
        }
        ~QTextInlineObject() {
            interceptor.Invoke("~QTextInlineObject", "~QTextInlineObject()", typeof(void));
        }
        public void Dispose() {
            interceptor.Invoke("~QTextInlineObject", "~QTextInlineObject()", typeof(void));
        }
    }
}
