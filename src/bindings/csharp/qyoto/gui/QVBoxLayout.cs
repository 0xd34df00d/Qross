//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QVBoxLayout")]
    public class QVBoxLayout : QBoxLayout, IDisposable {
        protected QVBoxLayout(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QVBoxLayout), this);
        }
        private static SmokeInvocation staticInterceptor = null;
        static QVBoxLayout() {
            staticInterceptor = new SmokeInvocation(typeof(QVBoxLayout), null);
        }
        public QVBoxLayout() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QVBoxLayout", "QVBoxLayout()", typeof(void));
        }
        public QVBoxLayout(QWidget parent) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QVBoxLayout#", "QVBoxLayout(QWidget*)", typeof(void), typeof(QWidget), parent);
        }
        ~QVBoxLayout() {
            interceptor.Invoke("~QVBoxLayout", "~QVBoxLayout()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QVBoxLayout", "~QVBoxLayout()", typeof(void));
        }
        public static new string Tr(string s, string c) {
            return (string) staticInterceptor.Invoke("tr$$", "tr(const char*, const char*)", typeof(string), typeof(string), s, typeof(string), c);
        }
        public static new string Tr(string s) {
            return (string) staticInterceptor.Invoke("tr$", "tr(const char*)", typeof(string), typeof(string), s);
        }
        protected new IQVBoxLayoutSignals Emit {
            get { return (IQVBoxLayoutSignals) Q_EMIT; }
        }
    }

    public interface IQVBoxLayoutSignals : IQBoxLayoutSignals {
    }
}
