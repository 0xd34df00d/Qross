//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QDragEnterEvent")]
    public class QDragEnterEvent : QDragMoveEvent, IDisposable {
        protected QDragEnterEvent(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QDragEnterEvent), this);
        }
        public QDragEnterEvent(QPoint pos, uint actions, QMimeData data, uint buttons, uint modifiers) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QDragEnterEvent#$#$$", "QDragEnterEvent(const QPoint&, Qt::DropActions, const QMimeData*, Qt::MouseButtons, Qt::KeyboardModifiers)", typeof(void), typeof(QPoint), pos, typeof(uint), actions, typeof(QMimeData), data, typeof(uint), buttons, typeof(uint), modifiers);
        }
        ~QDragEnterEvent() {
            interceptor.Invoke("~QDragEnterEvent", "~QDragEnterEvent()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QDragEnterEvent", "~QDragEnterEvent()", typeof(void));
        }
    }
}
