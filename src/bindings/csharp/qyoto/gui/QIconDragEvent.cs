//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QIconDragEvent")]
    public class QIconDragEvent : QEvent, IDisposable {
        protected QIconDragEvent(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QIconDragEvent), this);
        }
        public QIconDragEvent() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QIconDragEvent", "QIconDragEvent()", typeof(void));
        }
        ~QIconDragEvent() {
            interceptor.Invoke("~QIconDragEvent", "~QIconDragEvent()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QIconDragEvent", "~QIconDragEvent()", typeof(void));
        }
    }
}
