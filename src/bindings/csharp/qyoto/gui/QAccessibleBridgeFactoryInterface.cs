//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QAccessibleBridgeFactoryInterface")]
    public abstract class QAccessibleBridgeFactoryInterface : QFactoryInterface {
        protected QAccessibleBridgeFactoryInterface(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QAccessibleBridgeFactoryInterface), this);
        }
        [SmokeMethod("create(const QString&)")]
        public abstract QAccessibleBridge Create(string name);
        public QAccessibleBridgeFactoryInterface() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QAccessibleBridgeFactoryInterface", "QAccessibleBridgeFactoryInterface()", typeof(void));
        }
    }
}
