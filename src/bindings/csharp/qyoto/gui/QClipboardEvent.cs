//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QClipboardEvent")]
    public class QClipboardEvent : QEvent, IDisposable {
        protected QClipboardEvent(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QClipboardEvent), this);
        }
        // QClipboardEvent* QClipboardEvent(QEventPrivate* arg1); >>>> NOT CONVERTED
        // QEventPrivate* data(); >>>> NOT CONVERTED
        ~QClipboardEvent() {
            interceptor.Invoke("~QClipboardEvent", "~QClipboardEvent()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QClipboardEvent", "~QClipboardEvent()", typeof(void));
        }
    }
}
