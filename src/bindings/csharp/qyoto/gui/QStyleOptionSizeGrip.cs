//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QStyleOptionSizeGrip")]
    public class QStyleOptionSizeGrip : QStyleOptionComplex, IDisposable {
        protected QStyleOptionSizeGrip(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QStyleOptionSizeGrip), this);
        }
        public enum StyleOptionType {
            Type = QStyleOption.OptionType.SO_SizeGrip,
        }
        public enum StyleOptionVersion {
            Version = 1,
        }
        public Qt.Corner Corner {
            get { return (Qt.Corner) interceptor.Invoke("corner", "corner()", typeof(Qt.Corner)); }
            set { interceptor.Invoke("setCorner$", "setCorner(Qt::Corner)", typeof(void), typeof(Qt.Corner), value); }
        }
        public QStyleOptionSizeGrip() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionSizeGrip", "QStyleOptionSizeGrip()", typeof(void));
        }
        public QStyleOptionSizeGrip(QStyleOptionSizeGrip other) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionSizeGrip#", "QStyleOptionSizeGrip(const QStyleOptionSizeGrip&)", typeof(void), typeof(QStyleOptionSizeGrip), other);
        }
        public QStyleOptionSizeGrip(int version) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QStyleOptionSizeGrip$", "QStyleOptionSizeGrip(int)", typeof(void), typeof(int), version);
        }
        ~QStyleOptionSizeGrip() {
            interceptor.Invoke("~QStyleOptionSizeGrip", "~QStyleOptionSizeGrip()", typeof(void));
        }
        public new void Dispose() {
            interceptor.Invoke("~QStyleOptionSizeGrip", "~QStyleOptionSizeGrip()", typeof(void));
        }
    }
}
