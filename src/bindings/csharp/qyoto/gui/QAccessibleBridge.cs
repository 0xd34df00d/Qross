//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QAccessibleBridge")]
    public abstract class QAccessibleBridge : Object {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected QAccessibleBridge(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QAccessibleBridge), this);
        }
        [SmokeMethod("setRootObject(QAccessibleInterface*)")]
        public abstract void SetRootObject(QAccessibleInterface arg1);
        [SmokeMethod("notifyAccessibilityUpdate(int, QAccessibleInterface*, int)")]
        public abstract void NotifyAccessibilityUpdate(int arg1, QAccessibleInterface arg2, int arg3);
        public QAccessibleBridge() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QAccessibleBridge", "QAccessibleBridge()", typeof(void));
        }
    }
}
