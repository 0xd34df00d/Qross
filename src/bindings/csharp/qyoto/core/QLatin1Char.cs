//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QLatin1Char")]
    public class QLatin1Char : Object, IDisposable {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected QLatin1Char(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QLatin1Char), this);
        }
        public QLatin1Char(char c) : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QLatin1Char$", "QLatin1Char(char)", typeof(void), typeof(char), c);
        }
        public char ToLatin1() {
            return (char) interceptor.Invoke("toLatin1", "toLatin1() const", typeof(char));
        }
        public ushort Unicode() {
            return (ushort) interceptor.Invoke("unicode", "unicode() const", typeof(ushort));
        }
        ~QLatin1Char() {
            interceptor.Invoke("~QLatin1Char", "~QLatin1Char()", typeof(void));
        }
        public void Dispose() {
            interceptor.Invoke("~QLatin1Char", "~QLatin1Char()", typeof(void));
        }
    }
}
