//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QSqlDriverFactoryInterface")]
    public abstract class QSqlDriverFactoryInterface : QFactoryInterface {
        protected QSqlDriverFactoryInterface(Type dummy) : base((Type) null) {}
        protected new void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QSqlDriverFactoryInterface), this);
        }
        [SmokeMethod("create(const QString&)")]
        public abstract QSqlDriver Create(string name);
        public QSqlDriverFactoryInterface() : this((Type) null) {
            CreateProxy();
            interceptor.Invoke("QSqlDriverFactoryInterface", "QSqlDriverFactoryInterface()", typeof(void));
        }
    }
}
