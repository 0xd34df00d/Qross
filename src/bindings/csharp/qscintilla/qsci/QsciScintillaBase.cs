//Auto-generated by kalyptus. DO NOT EDIT.
namespace QScintilla {

	using System;
	using Qyoto;

	/// <remarks> See <see cref="IQsciScintillaBaseSignals"></see> for signals emitted by QsciScintillaBase
	/// </remarks>

	[SmokeClass("QsciScintillaBase")]
	public class QsciScintillaBase : QAbstractScrollArea, IDisposable {
 		protected QsciScintillaBase(Type dummy) : base((Type) null) {}
		protected new void CreateProxy() {
			interceptor = new SmokeInvocation(typeof(QsciScintillaBase), this);
		}
		private static SmokeInvocation staticInterceptor = null;
		static QsciScintillaBase() {
			staticInterceptor = new SmokeInvocation(typeof(QsciScintillaBase), null);
		}
		public const int SCI_START = 2000;
		public const int SCI_OPTIONAL_START = 3000;
		public const int SCI_LEXER_START = 4000;
		public const int SCI_ADDTEXT = 2001;
		public const int SCI_ADDSTYLEDTEXT = 2002;
		public const int SCI_INSERTTEXT = 2003;
		public const int SCI_CLEARALL = 2004;
		public const int SCI_CLEARDOCUMENTSTYLE = 2005;
		public const int SCI_GETLENGTH = 2006;
		public const int SCI_GETCHARAT = 2007;
		public const int SCI_GETCURRENTPOS = 2008;
		public const int SCI_GETANCHOR = 2009;
		public const int SCI_GETSTYLEAT = 2010;
		public const int SCI_REDO = 2011;
		public const int SCI_SETUNDOCOLLECTION = 2012;
		public const int SCI_SELECTALL = 2013;
		public const int SCI_SETSAVEPOINT = 2014;
		public const int SCI_GETSTYLEDTEXT = 2015;
		public const int SCI_CANREDO = 2016;
		public const int SCI_MARKERLINEFROMHANDLE = 2017;
		public const int SCI_MARKERDELETEHANDLE = 2018;
		public const int SCI_GETUNDOCOLLECTION = 2019;
		public const int SCI_GETVIEWWS = 2020;
		public const int SCI_SETVIEWWS = 2021;
		public const int SCI_POSITIONFROMPOINT = 2022;
		public const int SCI_POSITIONFROMPOINTCLOSE = 2023;
		public const int SCI_GOTOLINE = 2024;
		public const int SCI_GOTOPOS = 2025;
		public const int SCI_SETANCHOR = 2026;
		public const int SCI_GETCURLINE = 2027;
		public const int SCI_GETENDSTYLED = 2028;
		public const int SCI_CONVERTEOLS = 2029;
		public const int SCI_GETEOLMODE = 2030;
		public const int SCI_SETEOLMODE = 2031;
		public const int SCI_STARTSTYLING = 2032;
		public const int SCI_SETSTYLING = 2033;
		public const int SCI_GETBUFFEREDDRAW = 2034;
		public const int SCI_SETBUFFEREDDRAW = 2035;
		public const int SCI_SETTABWIDTH = 2036;
		public const int SCI_GETTABWIDTH = 2121;
		public const int SCI_SETCODEPAGE = 2037;
		public const int SCI_SETUSEPALETTE = 2039;
		public const int SCI_MARKERDEFINE = 2040;
		public const int SCI_MARKERSETFORE = 2041;
		public const int SCI_MARKERSETBACK = 2042;
		public const int SCI_MARKERADD = 2043;
		public const int SCI_MARKERDELETE = 2044;
		public const int SCI_MARKERDELETEALL = 2045;
		public const int SCI_MARKERGET = 2046;
		public const int SCI_MARKERNEXT = 2047;
		public const int SCI_MARKERPREVIOUS = 2048;
		public const int SCI_MARKERDEFINEPIXMAP = 2049;
		public const int SCI_SETMARGINTYPEN = 2240;
		public const int SCI_GETMARGINTYPEN = 2241;
		public const int SCI_SETMARGINWIDTHN = 2242;
		public const int SCI_GETMARGINWIDTHN = 2243;
		public const int SCI_SETMARGINMASKN = 2244;
		public const int SCI_GETMARGINMASKN = 2245;
		public const int SCI_SETMARGINSENSITIVEN = 2246;
		public const int SCI_GETMARGINSENSITIVEN = 2247;
		public const int SCI_STYLECLEARALL = 2050;
		public const int SCI_STYLESETFORE = 2051;
		public const int SCI_STYLESETBACK = 2052;
		public const int SCI_STYLESETBOLD = 2053;
		public const int SCI_STYLESETITALIC = 2054;
		public const int SCI_STYLESETSIZE = 2055;
		public const int SCI_STYLESETFONT = 2056;
		public const int SCI_STYLESETEOLFILLED = 2057;
		public const int SCI_STYLERESETDEFAULT = 2058;
		public const int SCI_STYLESETUNDERLINE = 2059;
		public const int SCI_STYLESETCASE = 2060;
		public const int SCI_STYLESETCHARACTERSET = 2066;
		public const int SCI_SETSELFORE = 2067;
		public const int SCI_SETSELBACK = 2068;
		public const int SCI_SETCARETFORE = 2069;
		public const int SCI_ASSIGNCMDKEY = 2070;
		public const int SCI_CLEARCMDKEY = 2071;
		public const int SCI_CLEARALLCMDKEYS = 2072;
		public const int SCI_SETSTYLINGEX = 2073;
		public const int SCI_STYLESETVISIBLE = 2074;
		public const int SCI_GETCARETPERIOD = 2075;
		public const int SCI_SETCARETPERIOD = 2076;
		public const int SCI_SETWORDCHARS = 2077;
		public const int SCI_BEGINUNDOACTION = 2078;
		public const int SCI_ENDUNDOACTION = 2079;
		public const int SCI_INDICSETSTYLE = 2080;
		public const int SCI_INDICGETSTYLE = 2081;
		public const int SCI_INDICSETFORE = 2082;
		public const int SCI_INDICGETFORE = 2083;
		public const int SCI_SETWHITESPACEFORE = 2084;
		public const int SCI_SETWHITESPACEBACK = 2085;
		public const int SCI_SETSTYLEBITS = 2090;
		public const int SCI_GETSTYLEBITS = 2091;
		public const int SCI_SETLINESTATE = 2092;
		public const int SCI_GETLINESTATE = 2093;
		public const int SCI_GETMAXLINESTATE = 2094;
		public const int SCI_GETCARETLINEVISIBLE = 2095;
		public const int SCI_SETCARETLINEVISIBLE = 2096;
		public const int SCI_GETCARETLINEBACK = 2097;
		public const int SCI_SETCARETLINEBACK = 2098;
		public const int SCI_STYLESETCHANGEABLE = 2099;
		public const int SCI_AUTOCSHOW = 2100;
		public const int SCI_AUTOCCANCEL = 2101;
		public const int SCI_AUTOCACTIVE = 2102;
		public const int SCI_AUTOCPOSSTART = 2103;
		public const int SCI_AUTOCCOMPLETE = 2104;
		public const int SCI_AUTOCSTOPS = 2105;
		public const int SCI_AUTOCSETSEPARATOR = 2106;
		public const int SCI_AUTOCGETSEPARATOR = 2107;
		public const int SCI_AUTOCSELECT = 2108;
		public const int SCI_AUTOCSETCANCELATSTART = 2110;
		public const int SCI_AUTOCGETCANCELATSTART = 2111;
		public const int SCI_AUTOCSETFILLUPS = 2112;
		public const int SCI_AUTOCSETCHOOSESINGLE = 2113;
		public const int SCI_AUTOCGETCHOOSESINGLE = 2114;
		public const int SCI_AUTOCSETIGNORECASE = 2115;
		public const int SCI_AUTOCGETIGNORECASE = 2116;
		public const int SCI_USERLISTSHOW = 2117;
		public const int SCI_AUTOCSETAUTOHIDE = 2118;
		public const int SCI_AUTOCGETAUTOHIDE = 2119;
		public const int SCI_AUTOCSETDROPRESTOFWORD = 2270;
		public const int SCI_AUTOCGETDROPRESTOFWORD = 2271;
		public const int SCI_SETINDENT = 2122;
		public const int SCI_GETINDENT = 2123;
		public const int SCI_SETUSETABS = 2124;
		public const int SCI_GETUSETABS = 2125;
		public const int SCI_SETLINEINDENTATION = 2126;
		public const int SCI_GETLINEINDENTATION = 2127;
		public const int SCI_GETLINEINDENTPOSITION = 2128;
		public const int SCI_GETCOLUMN = 2129;
		public const int SCI_SETHSCROLLBAR = 2130;
		public const int SCI_GETHSCROLLBAR = 2131;
		public const int SCI_SETINDENTATIONGUIDES = 2132;
		public const int SCI_GETINDENTATIONGUIDES = 2133;
		public const int SCI_SETHIGHLIGHTGUIDE = 2134;
		public const int SCI_GETHIGHLIGHTGUIDE = 2135;
		public const int SCI_GETLINEENDPOSITION = 2136;
		public const int SCI_GETCODEPAGE = 2137;
		public const int SCI_GETCARETFORE = 2138;
		public const int SCI_GETUSEPALETTE = 2139;
		public const int SCI_GETREADONLY = 2140;
		public const int SCI_SETCURRENTPOS = 2141;
		public const int SCI_SETSELECTIONSTART = 2142;
		public const int SCI_GETSELECTIONSTART = 2143;
		public const int SCI_SETSELECTIONEND = 2144;
		public const int SCI_GETSELECTIONEND = 2145;
		public const int SCI_SETPRINTMAGNIFICATION = 2146;
		public const int SCI_GETPRINTMAGNIFICATION = 2147;
		public const int SCI_SETPRINTCOLOURMODE = 2148;
		public const int SCI_GETPRINTCOLOURMODE = 2149;
		public const int SCI_FINDTEXT = 2150;
		public const int SCI_FORMATRANGE = 2151;
		public const int SCI_GETFIRSTVISIBLELINE = 2152;
		public const int SCI_GETLINE = 2153;
		public const int SCI_GETLINECOUNT = 2154;
		public const int SCI_SETMARGINLEFT = 2155;
		public const int SCI_GETMARGINLEFT = 2156;
		public const int SCI_SETMARGINRIGHT = 2157;
		public const int SCI_GETMARGINRIGHT = 2158;
		public const int SCI_GETMODIFY = 2159;
		public const int SCI_SETSEL = 2160;
		public const int SCI_GETSELTEXT = 2161;
		public const int SCI_GETTEXTRANGE = 2162;
		public const int SCI_HIDESELECTION = 2163;
		public const int SCI_POINTXFROMPOSITION = 2164;
		public const int SCI_POINTYFROMPOSITION = 2165;
		public const int SCI_LINEFROMPOSITION = 2166;
		public const int SCI_POSITIONFROMLINE = 2167;
		public const int SCI_LINESCROLL = 2168;
		public const int SCI_SCROLLCARET = 2169;
		public const int SCI_REPLACESEL = 2170;
		public const int SCI_SETREADONLY = 2171;
		public const int SCI_NULL = 2172;
		public const int SCI_CANPASTE = 2173;
		public const int SCI_CANUNDO = 2174;
		public const int SCI_EMPTYUNDOBUFFER = 2175;
		public const int SCI_UNDO = 2176;
		public const int SCI_CUT = 2177;
		public const int SCI_COPY = 2178;
		public const int SCI_PASTE = 2179;
		public const int SCI_CLEAR = 2180;
		public const int SCI_SETTEXT = 2181;
		public const int SCI_GETTEXT = 2182;
		public const int SCI_GETTEXTLENGTH = 2183;
		public const int SCI_GETDIRECTFUNCTION = 2184;
		public const int SCI_GETDIRECTPOINTER = 2185;
		public const int SCI_SETOVERTYPE = 2186;
		public const int SCI_GETOVERTYPE = 2187;
		public const int SCI_SETCARETWIDTH = 2188;
		public const int SCI_GETCARETWIDTH = 2189;
		public const int SCI_SETTARGETSTART = 2190;
		public const int SCI_GETTARGETSTART = 2191;
		public const int SCI_SETTARGETEND = 2192;
		public const int SCI_GETTARGETEND = 2193;
		public const int SCI_REPLACETARGET = 2194;
		public const int SCI_REPLACETARGETRE = 2195;
		public const int SCI_SEARCHINTARGET = 2197;
		public const int SCI_SETSEARCHFLAGS = 2198;
		public const int SCI_GETSEARCHFLAGS = 2199;
		public const int SCI_CALLTIPSHOW = 2200;
		public const int SCI_CALLTIPCANCEL = 2201;
		public const int SCI_CALLTIPACTIVE = 2202;
		public const int SCI_CALLTIPPOSSTART = 2203;
		public const int SCI_CALLTIPSETHLT = 2204;
		public const int SCI_CALLTIPSETBACK = 2205;
		public const int SCI_CALLTIPSETFORE = 2206;
		public const int SCI_CALLTIPSETFOREHLT = 2207;
		public const int SCI_AUTOCSETMAXWIDTH = 2208;
		public const int SCI_AUTOCGETMAXWIDTH = 2209;
		public const int SCI_AUTOCSETMAXHEIGHT = 2210;
		public const int SCI_AUTOCGETMAXHEIGHT = 2211;
		public const int SCI_CALLTIPUSESTYLE = 2212;
		public const int SCI_VISIBLEFROMDOCLINE = 2220;
		public const int SCI_DOCLINEFROMVISIBLE = 2221;
		public const int SCI_SETFOLDLEVEL = 2222;
		public const int SCI_GETFOLDLEVEL = 2223;
		public const int SCI_GETLASTCHILD = 2224;
		public const int SCI_GETFOLDPARENT = 2225;
		public const int SCI_SHOWLINES = 2226;
		public const int SCI_HIDELINES = 2227;
		public const int SCI_GETLINEVISIBLE = 2228;
		public const int SCI_SETFOLDEXPANDED = 2229;
		public const int SCI_GETFOLDEXPANDED = 2230;
		public const int SCI_TOGGLEFOLD = 2231;
		public const int SCI_ENSUREVISIBLE = 2232;
		public const int SCI_SETFOLDFLAGS = 2233;
		public const int SCI_ENSUREVISIBLEENFORCEPOLICY = 2234;
		public const int SCI_WRAPCOUNT = 2235;
		public const int SCI_SETTABINDENTS = 2260;
		public const int SCI_GETTABINDENTS = 2261;
		public const int SCI_SETBACKSPACEUNINDENTS = 2262;
		public const int SCI_GETBACKSPACEUNINDENTS = 2263;
		public const int SCI_SETMOUSEDWELLTIME = 2264;
		public const int SCI_GETMOUSEDWELLTIME = 2265;
		public const int SCI_WORDSTARTPOSITION = 2266;
		public const int SCI_WORDENDPOSITION = 2267;
		public const int SCI_SETWRAPMODE = 2268;
		public const int SCI_GETWRAPMODE = 2269;
		public const int SCI_SETLAYOUTCACHE = 2272;
		public const int SCI_GETLAYOUTCACHE = 2273;
		public const int SCI_SETSCROLLWIDTH = 2274;
		public const int SCI_GETSCROLLWIDTH = 2275;
		public const int SCI_TEXTWIDTH = 2276;
		public const int SCI_SETENDATLASTLINE = 2277;
		public const int SCI_GETENDATLASTLINE = 2278;
		public const int SCI_TEXTHEIGHT = 2279;
		public const int SCI_SETVSCROLLBAR = 2280;
		public const int SCI_GETVSCROLLBAR = 2281;
		public const int SCI_APPENDTEXT = 2282;
		public const int SCI_GETTWOPHASEDRAW = 2283;
		public const int SCI_SETTWOPHASEDRAW = 2284;
		public const int SCI_AUTOCGETTYPESEPARATOR = 2285;
		public const int SCI_AUTOCSETTYPESEPARATOR = 2286;
		public const int SCI_TARGETFROMSELECTION = 2287;
		public const int SCI_LINESJOIN = 2288;
		public const int SCI_LINESSPLIT = 2289;
		public const int SCI_SETFOLDMARGINCOLOUR = 2290;
		public const int SCI_SETFOLDMARGINHICOLOUR = 2291;
		public const int SCI_LINEDOWN = 2300;
		public const int SCI_LINEDOWNEXTEND = 2301;
		public const int SCI_LINEUP = 2302;
		public const int SCI_LINEUPEXTEND = 2303;
		public const int SCI_CHARLEFT = 2304;
		public const int SCI_CHARLEFTEXTEND = 2305;
		public const int SCI_CHARRIGHT = 2306;
		public const int SCI_CHARRIGHTEXTEND = 2307;
		public const int SCI_WORDLEFT = 2308;
		public const int SCI_WORDLEFTEXTEND = 2309;
		public const int SCI_WORDRIGHT = 2310;
		public const int SCI_WORDRIGHTEXTEND = 2311;
		public const int SCI_HOME = 2312;
		public const int SCI_HOMEEXTEND = 2313;
		public const int SCI_LINEEND = 2314;
		public const int SCI_LINEENDEXTEND = 2315;
		public const int SCI_DOCUMENTSTART = 2316;
		public const int SCI_DOCUMENTSTARTEXTEND = 2317;
		public const int SCI_DOCUMENTEND = 2318;
		public const int SCI_DOCUMENTENDEXTEND = 2319;
		public const int SCI_PAGEUP = 2320;
		public const int SCI_PAGEUPEXTEND = 2321;
		public const int SCI_PAGEDOWN = 2322;
		public const int SCI_PAGEDOWNEXTEND = 2323;
		public const int SCI_EDITTOGGLEOVERTYPE = 2324;
		public const int SCI_CANCEL = 2325;
		public const int SCI_DELETEBACK = 2326;
		public const int SCI_TAB = 2327;
		public const int SCI_BACKTAB = 2328;
		public const int SCI_NEWLINE = 2329;
		public const int SCI_FORMFEED = 2330;
		public const int SCI_VCHOME = 2331;
		public const int SCI_VCHOMEEXTEND = 2332;
		public const int SCI_ZOOMIN = 2333;
		public const int SCI_ZOOMOUT = 2334;
		public const int SCI_DELWORDLEFT = 2335;
		public const int SCI_DELWORDRIGHT = 2336;
		public const int SCI_LINECUT = 2337;
		public const int SCI_LINEDELETE = 2338;
		public const int SCI_LINETRANSPOSE = 2339;
		public const int SCI_LOWERCASE = 2340;
		public const int SCI_UPPERCASE = 2341;
		public const int SCI_LINESCROLLDOWN = 2342;
		public const int SCI_LINESCROLLUP = 2343;
		public const int SCI_DELETEBACKNOTLINE = 2344;
		public const int SCI_HOMEDISPLAY = 2345;
		public const int SCI_HOMEDISPLAYEXTEND = 2346;
		public const int SCI_LINEENDDISPLAY = 2347;
		public const int SCI_LINEENDDISPLAYEXTEND = 2348;
		public const int SCI_MOVECARETINSIDEVIEW = 2401;
		public const int SCI_LINELENGTH = 2350;
		public const int SCI_BRACEHIGHLIGHT = 2351;
		public const int SCI_BRACEBADLIGHT = 2352;
		public const int SCI_BRACEMATCH = 2353;
		public const int SCI_GETVIEWEOL = 2355;
		public const int SCI_SETVIEWEOL = 2356;
		public const int SCI_GETDOCPOINTER = 2357;
		public const int SCI_SETDOCPOINTER = 2358;
		public const int SCI_SETMODEVENTMASK = 2359;
		public const int SCI_GETEDGECOLUMN = 2360;
		public const int SCI_SETEDGECOLUMN = 2361;
		public const int SCI_GETEDGEMODE = 2362;
		public const int SCI_SETEDGEMODE = 2363;
		public const int SCI_GETEDGECOLOUR = 2364;
		public const int SCI_SETEDGECOLOUR = 2365;
		public const int SCI_SEARCHANCHOR = 2366;
		public const int SCI_SEARCHNEXT = 2367;
		public const int SCI_SEARCHPREV = 2368;
		public const int SCI_LINESONSCREEN = 2370;
		public const int SCI_USEPOPUP = 2371;
		public const int SCI_SELECTIONISRECTANGLE = 2372;
		public const int SCI_SETZOOM = 2373;
		public const int SCI_GETZOOM = 2374;
		public const int SCI_CREATEDOCUMENT = 2375;
		public const int SCI_ADDREFDOCUMENT = 2376;
		public const int SCI_RELEASEDOCUMENT = 2377;
		public const int SCI_GETMODEVENTMASK = 2378;
		public const int SCI_SETFOCUS = 2380;
		public const int SCI_GETFOCUS = 2381;
		public const int SCI_SETSTATUS = 2382;
		public const int SCI_GETSTATUS = 2383;
		public const int SCI_SETMOUSEDOWNCAPTURES = 2384;
		public const int SCI_GETMOUSEDOWNCAPTURES = 2385;
		public const int SCI_SETCURSOR = 2386;
		public const int SCI_GETCURSOR = 2387;
		public const int SCI_SETCONTROLCHARSYMBOL = 2388;
		public const int SCI_GETCONTROLCHARSYMBOL = 2389;
		public const int SCI_WORDPARTLEFT = 2390;
		public const int SCI_WORDPARTLEFTEXTEND = 2391;
		public const int SCI_WORDPARTRIGHT = 2392;
		public const int SCI_WORDPARTRIGHTEXTEND = 2393;
		public const int SCI_SETVISIBLEPOLICY = 2394;
		public const int SCI_DELLINELEFT = 2395;
		public const int SCI_DELLINERIGHT = 2396;
		public const int SCI_SETXOFFSET = 2397;
		public const int SCI_GETXOFFSET = 2398;
		public const int SCI_CHOOSECARETX = 2399;
		public const int SCI_GRABFOCUS = 2400;
		public const int SCI_SETXCARETPOLICY = 2402;
		public const int SCI_SETYCARETPOLICY = 2403;
		public const int SCI_LINEDUPLICATE = 2404;
		public const int SCI_REGISTERIMAGE = 2405;
		public const int SCI_SETPRINTWRAPMODE = 2406;
		public const int SCI_GETPRINTWRAPMODE = 2407;
		public const int SCI_CLEARREGISTEREDIMAGES = 2408;
		public const int SCI_STYLESETHOTSPOT = 2409;
		public const int SCI_SETHOTSPOTACTIVEFORE = 2410;
		public const int SCI_SETHOTSPOTACTIVEBACK = 2411;
		public const int SCI_SETHOTSPOTACTIVEUNDERLINE = 2412;
		public const int SCI_PARADOWN = 2413;
		public const int SCI_PARADOWNEXTEND = 2414;
		public const int SCI_PARAUP = 2415;
		public const int SCI_PARAUPEXTEND = 2416;
		public const int SCI_POSITIONBEFORE = 2417;
		public const int SCI_POSITIONAFTER = 2418;
		public const int SCI_COPYRANGE = 2419;
		public const int SCI_COPYTEXT = 2420;
		public const int SCI_SETSELECTIONMODE = 2422;
		public const int SCI_GETSELECTIONMODE = 2423;
		public const int SCI_GETLINESELSTARTPOSITION = 2424;
		public const int SCI_GETLINESELENDPOSITION = 2425;
		public const int SCI_LINEDOWNRECTEXTEND = 2426;
		public const int SCI_LINEUPRECTEXTEND = 2427;
		public const int SCI_CHARLEFTRECTEXTEND = 2428;
		public const int SCI_CHARRIGHTRECTEXTEND = 2429;
		public const int SCI_HOMERECTEXTEND = 2430;
		public const int SCI_VCHOMERECTEXTEND = 2431;
		public const int SCI_LINEENDRECTEXTEND = 2432;
		public const int SCI_PAGEUPRECTEXTEND = 2433;
		public const int SCI_PAGEDOWNRECTEXTEND = 2434;
		public const int SCI_STUTTEREDPAGEUP = 2435;
		public const int SCI_STUTTEREDPAGEUPEXTEND = 2436;
		public const int SCI_STUTTEREDPAGEDOWN = 2437;
		public const int SCI_STUTTEREDPAGEDOWNEXTEND = 2438;
		public const int SCI_WORDLEFTEND = 2439;
		public const int SCI_WORDLEFTENDEXTEND = 2440;
		public const int SCI_WORDRIGHTEND = 2441;
		public const int SCI_WORDRIGHTENDEXTEND = 2442;
		public const int SCI_SETWHITESPACECHARS = 2443;
		public const int SCI_SETCHARSDEFAULT = 2444;
		public const int SCI_AUTOCGETCURRENT = 2445;
		public const int SCI_ALLOCATE = 2446;
		public const int SCI_HOMEWRAP = 2349;
		public const int SCI_HOMEWRAPEXTEND = 2450;
		public const int SCI_LINEENDWRAP = 2451;
		public const int SCI_LINEENDWRAPEXTEND = 2452;
		public const int SCI_VCHOMEWRAP = 2453;
		public const int SCI_VCHOMEWRAPEXTEND = 2454;
		public const int SCI_LINECOPY = 2455;
		public const int SCI_FINDCOLUMN = 2456;
		public const int SCI_GETCARETSTICKY = 2457;
		public const int SCI_SETCARETSTICKY = 2458;
		public const int SCI_TOGGLECARETSTICKY = 2459;
		public const int SCI_SETWRAPVISUALFLAGS = 2460;
		public const int SCI_GETWRAPVISUALFLAGS = 2461;
		public const int SCI_SETWRAPVISUALFLAGSLOCATION = 2462;
		public const int SCI_GETWRAPVISUALFLAGSLOCATION = 2463;
		public const int SCI_SETWRAPSTARTINDENT = 2464;
		public const int SCI_GETWRAPSTARTINDENT = 2465;
		public const int SCI_MARKERADDSET = 2466;
		public const int SCI_SETPASTECONVERTENDINGS = 2467;
		public const int SCI_GETPASTECONVERTENDINGS = 2468;
		public const int SCI_SELECTIONDUPLICATE = 2469;
		public const int SCI_SETCARETLINEBACKALPHA = 2470;
		public const int SCI_GETCARETLINEBACKALPHA = 2471;
		public const int SCI_MARKERSETALPHA = 2476;
		public const int SCI_GETSELALPHA = 2477;
		public const int SCI_SETSELALPHA = 2478;
		public const int SCI_GETSELEOLFILLED = 2479;
		public const int SCI_SETSELEOLFILLED = 2480;
		public const int SCI_STYLEGETFORE = 2481;
		public const int SCI_STYLEGETBACK = 2482;
		public const int SCI_STYLEGETBOLD = 2483;
		public const int SCI_STYLEGETITALIC = 2484;
		public const int SCI_STYLEGETSIZE = 2485;
		public const int SCI_STYLEGETFONT = 2486;
		public const int SCI_STYLEGETEOLFILLED = 2487;
		public const int SCI_STYLEGETUNDERLINE = 2488;
		public const int SCI_STYLEGETCASE = 2489;
		public const int SCI_STYLEGETCHARACTERSET = 2490;
		public const int SCI_STYLEGETVISIBLE = 2491;
		public const int SCI_STYLEGETCHANGEABLE = 2492;
		public const int SCI_STYLEGETHOTSPOT = 2493;
		public const int SCI_GETHOTSPOTACTIVEFORE = 2494;
		public const int SCI_GETHOTSPOTACTIVEBACK = 2495;
		public const int SCI_GETHOTSPOTACTIVEUNDERLINE = 2496;
		public const int SCI_GETHOTSPOTSINGLELINE = 2497;
		public const int SCI_SETINDICATORCURRENT = 2500;
		public const int SCI_GETINDICATORCURRENT = 2501;
		public const int SCI_SETINDICATORVALUE = 2502;
		public const int SCI_GETINDICATORVALUE = 2503;
		public const int SCI_INDICATORFILLRANGE = 2504;
		public const int SCI_INDICATORCLEARRANGE = 2505;
		public const int SCI_INDICATORALLONFOR = 2506;
		public const int SCI_INDICATORVALUEAT = 2507;
		public const int SCI_INDICATORSTART = 2508;
		public const int SCI_INDICATOREND = 2509;
		public const int SCI_INDICSETUNDER = 2510;
		public const int SCI_INDICGETUNDER = 2511;
		public const int SCI_SETCARETSTYLE = 2512;
		public const int SCI_GETCARETSTYLE = 2513;
		public const int SCI_SETPOSITIONCACHE = 2514;
		public const int SCI_GETPOSITIONCACHE = 2515;
		public const int SCI_SETSCROLLWIDTHTRACKING = 2516;
		public const int SCI_GETSCROLLWIDTHTRACKING = 2517;
		public const int SCI_DELWORDRIGHTEND = 2518;
		public const int SCI_STARTRECORD = 3001;
		public const int SCI_STOPRECORD = 3002;
		public const int SCI_SETLEXER = 4001;
		public const int SCI_GETLEXER = 4002;
		public const int SCI_COLOURISE = 4003;
		public const int SCI_SETPROPERTY = 4004;
		public const int SCI_SETKEYWORDS = 4005;
		public const int SCI_SETLEXERLANGUAGE = 4006;
		public const int SCI_LOADLEXERLIBRARY = 4007;
		public const int SCI_GETPROPERTY = 4008;
		public const int SCI_GETPROPERTYEXPANDED = 4009;
		public const int SCI_GETPROPERTYINT = 4010;
		public const int SCI_GETSTYLEBITSNEEDED = 4011;

		public const int SC_ALPHA_TRANSPARENT = 0;
		public const int SC_ALPHA_OPAQUE = 255;
		public const int SC_ALPHA_NOALPHA = 256;

		public const int SC_WRAPVISUALFLAG_NONE = 0x0000;
		public const int SC_WRAPVISUALFLAG_END = 0x0001;
		public const int SC_WRAPVISUALFLAG_START = 0x0002;

		public const int SC_WRAPVISUALFLAGLOC_DEFAULT = 0x0000;
		public const int SC_WRAPVISUALFLAGLOC_END_BY_TEXT = 0x0001;
		public const int SC_WRAPVISUALFLAGLOC_START_BY_TEXT = 0x0002;

		public const int SC_SEL_STREAM = 0;
		public const int SC_SEL_RECTANGLE = 1;
		public const int SC_SEL_LINES = 2;

		public const int SCWS_INVISIBLE = 0;
		public const int SCWS_VISIBLEALWAYS = 1;
		public const int SCWS_VISIBLEAFTERINDENT = 2;

		public const int SC_EOL_CRLF = 0;
		public const int SC_EOL_CR = 1;
		public const int SC_EOL_LF = 2;

		public const int SC_CP_DBCS = 1;
		public const int SC_CP_UTF8 = 65001;

		public const int SC_MARK_CIRCLE = 0;
		public const int SC_MARK_ROUNDRECT = 1;
		public const int SC_MARK_ARROW = 2;
		public const int SC_MARK_SMALLRECT = 3;
		public const int SC_MARK_SHORTARROW = 4;
		public const int SC_MARK_EMPTY = 5;
		public const int SC_MARK_ARROWDOWN = 6;
		public const int SC_MARK_MINUS = 7;
		public const int SC_MARK_PLUS = 8;
		public const int SC_MARK_VLINE = 9;
		public const int SC_MARK_LCORNER = 10;
		public const int SC_MARK_TCORNER = 11;
		public const int SC_MARK_BOXPLUS = 12;
		public const int SC_MARK_BOXPLUSCONNECTED = 13;
		public const int SC_MARK_BOXMINUS = 14;
		public const int SC_MARK_BOXMINUSCONNECTED = 15;
		public const int SC_MARK_LCORNERCURVE = 16;
		public const int SC_MARK_TCORNERCURVE = 17;
		public const int SC_MARK_CIRCLEPLUS = 18;
		public const int SC_MARK_CIRCLEPLUSCONNECTED = 19;
		public const int SC_MARK_CIRCLEMINUS = 20;
		public const int SC_MARK_CIRCLEMINUSCONNECTED = 21;
		public const int SC_MARK_BACKGROUND = 22;
		public const int SC_MARK_DOTDOTDOT = 23;
		public const int SC_MARK_ARROWS = 24;
		public const int SC_MARK_PIXMAP = 25;
		public const int SC_MARK_FULLRECT = 26;
		public const int SC_MARK_CHARACTER = 10000;

		public const int SC_MARKNUM_FOLDEREND = 25;
		public const int SC_MARKNUM_FOLDEROPENMID = 26;
		public const int SC_MARKNUM_FOLDERMIDTAIL = 27;
		public const int SC_MARKNUM_FOLDERTAIL = 28;
		public const int SC_MARKNUM_FOLDERSUB = 29;
		public const int SC_MARKNUM_FOLDER = 30;
		public const int SC_MARKNUM_FOLDEROPEN = 31;
		public const long SC_MASK_FOLDERS = 0xfe000000;

		public const int SC_MARGIN_SYMBOL = 0;
		public const int SC_MARGIN_NUMBER = 1;
		public const int SC_MARGIN_BACK = 2;
		public const int SC_MARGIN_FORE = 3;

		public const int STYLE_DEFAULT = 32;
		public const int STYLE_LINENUMBER = 33;
		public const int STYLE_BRACELIGHT = 34;
		public const int STYLE_BRACEBAD = 35;
		public const int STYLE_CONTROLCHAR = 36;
		public const int STYLE_INDENTGUIDE = 37;
		public const int STYLE_CALLTIP = 38;
		public const int STYLE_LASTPREDEFINED = 39;
		public const int STYLE_MAX = 255;

		public const int SC_CHARSET_ANSI = 0;
		public const int SC_CHARSET_DEFAULT = 1;
		public const int SC_CHARSET_BALTIC = 186;
		public const int SC_CHARSET_CHINESEBIG5 = 136;
		public const int SC_CHARSET_EASTEUROPE = 238;
		public const int SC_CHARSET_GB2312 = 134;
		public const int SC_CHARSET_GREEK = 161;
		public const int SC_CHARSET_HANGUL = 129;
		public const int SC_CHARSET_MAC = 77;
		public const int SC_CHARSET_OEM = 255;
		public const int SC_CHARSET_RUSSIAN = 204;
		public const int SC_CHARSET_SHIFTJIS = 128;
		public const int SC_CHARSET_SYMBOL = 2;
		public const int SC_CHARSET_TURKISH = 162;
		public const int SC_CHARSET_JOHAB = 130;
		public const int SC_CHARSET_HEBREW = 177;
		public const int SC_CHARSET_ARABIC = 178;
		public const int SC_CHARSET_VIETNAMESE = 163;
		public const int SC_CHARSET_THAI = 222;
		public const int SC_CHARSET_8859_15 = 1000;

		public const int SC_CASE_MIXED = 0;
		public const int SC_CASE_UPPER = 1;
		public const int SC_CASE_LOWER = 2;

		public const int SC_IV_NONE = 0;
		public const int SC_IV_REAL = 1;
		public const int SC_IV_LOOKFORWARD = 2;
		public const int SC_IV_LOOKBOTH = 3;

		public const int INDIC_MAX = 31;
		public const int INDIC_PLAIN = 0;
		public const int INDIC_SQUIGGLE = 1;
		public const int INDIC_TT = 2;
		public const int INDIC_DIAGONAL = 3;
		public const int INDIC_STRIKE = 4;
		public const int INDIC_HIDDEN = 5;
		public const int INDIC_BOX = 6;
		public const int INDIC_ROUNDBOX = 7;
		public const int INDIC_CONTAINER = 8;
		public const int INDIC0_MASK = 0x20;
		public const int INDIC1_MASK = 0x40;
		public const int INDIC2_MASK = 0x80;
		public const int INDICS_MASK = 0xe0;

		public const int SC_PRINT_NORMAL = 0;
		public const int SC_PRINT_INVERTLIGHT = 1;
		public const int SC_PRINT_BLACKONWHITE = 2;
		public const int SC_PRINT_COLOURONWHITE = 3;
		public const int SC_PRINT_COLOURONWHITEDEFAULTBG = 4;

		public const int SCFIND_WHOLEWORD = 2;
		public const int SCFIND_MATCHCASE = 4;
		public const int SCFIND_WORDSTART = 0x00100000;
		public const int SCFIND_REGEXP = 0x00200000;
		public const int SCFIND_POSIX = 0x00400000;

		public const int SC_FOLDLEVELBASE = 0x00400;
		public const int SC_FOLDLEVELWHITEFLAG = 0x01000;
		public const int SC_FOLDLEVELHEADERFLAG = 0x02000;
		public const int SC_FOLDLEVELBOXHEADERFLAG = 0x04000;
		public const int SC_FOLDLEVELBOXFOOTERFLAG = 0x08000;
		public const int SC_FOLDLEVELCONTRACTED = 0x10000;
		public const int SC_FOLDLEVELUNINDENT = 0x20000;
		public const int SC_FOLDLEVELNUMBERMASK = 0x00fff;

		public const int SC_FOLDFLAG_BOX = 0x0001;
		public const int SC_FOLDFLAG_LINEBEFORE_EXPANDED = 0x0002;
		public const int SC_FOLDFLAG_LINEBEFORE_CONTRACTED = 0x0004;
		public const int SC_FOLDFLAG_LINEAFTER_EXPANDED = 0x0008;
		public const int SC_FOLDFLAG_LINEAFTER_CONTRACTED = 0x0010;
		public const int SC_FOLDFLAG_LEVELNUMBERS = 0x0040;

		public const int SC_TIME_FOREVER = 10000000;

		public const int SC_WRAP_NONE = 0;
		public const int SC_WRAP_WORD = 1;
		public const int SC_WRAP_CHAR = 2;

		public const int SC_CACHE_NONE = 0;
		public const int SC_CACHE_CARET = 1;
		public const int SC_CACHE_PAGE = 2;
		public const int SC_CACHE_DOCUMENT = 3;

		public const int EDGE_NONE = 0;
		public const int EDGE_LINE = 1;
		public const int EDGE_BACKGROUND = 2;

		public const int SC_CURSORNORMAL = -1;
		public const int SC_CURSORWAIT = 4;

		public const int VISIBLE_SLOP = 0x01;
		public const int VISIBLE_STRICT = 0x04;

		public const int CARET_SLOP = 0x01;
		public const int CARET_STRICT = 0x04;
		public const int CARET_JUMPS = 0x10;
		public const int CARET_EVEN = 0x08;

		public const int CARETSTYLE_INVISIBLE = 0;
		public const int CARETSTYLE_LINE = 1;
		public const int CARETSTYLE_BLOCK = 2;

		public const int SC_MOD_INSERTTEXT = 0x1;
		public const int SC_MOD_DELETETEXT = 0x2;
		public const int SC_MOD_CHANGESTYLE = 0x4;
		public const int SC_MOD_CHANGEFOLD = 0x8;
		public const int SC_PERFORMED_USER = 0x10;
		public const int SC_PERFORMED_UNDO = 0x20;
		public const int SC_PERFORMED_REDO = 0x40;
		public const int SC_MULTISTEPUNDOREDO = 0x80;
		public const int SC_LASTSTEPINUNDOREDO = 0x100;
		public const int SC_MOD_CHANGEMARKER = 0x200;
		public const int SC_MOD_BEFOREINSERT = 0x400;
		public const int SC_MOD_BEFOREDELETE = 0x800;
		public const int SC_MULTILINEUNDOREDO = 0x1000;
		public const int SC_STARTACTION = 0x2000;
		public const int SC_MOD_CHANGEINDICATOR = 0x4000;
		public const int SC_MOD_CHANGELINESTATE = 0x8000;
		public const int SC_MODEVENTMASKALL = 0xffff;

		public const int SCK_DOWN = 300;
		public const int SCK_UP = 301;
		public const int SCK_LEFT = 302;
		public const int SCK_RIGHT = 303;
		public const int SCK_HOME = 304;
		public const int SCK_END = 305;
		public const int SCK_PRIOR = 306;
		public const int SCK_NEXT = 307;
		public const int SCK_DELETE = 308;
		public const int SCK_INSERT = 309;
		public const int SCK_ESCAPE = 7;
		public const int SCK_BACK = 8;
		public const int SCK_TAB = 9;
		public const int SCK_RETURN = 13;
		public const int SCK_ADD = 310;
		public const int SCK_SUBTRACT = 311;
		public const int SCK_DIVIDE = 312;
		public const int SCK_WIN = 313;
		public const int SCK_RWIN = 314;
		public const int SCK_MENU = 315;

		public const int SCMOD_NORM = 0;
		public const int SCMOD_SHIFT = 1;
		public const int SCMOD_CTRL = 2;
		public const int SCMOD_ALT = 4;

		public const int SCLEX_CONTAINER = 0;
		public const int SCLEX_NULL = 1;
		public const int SCLEX_PYTHON = 2;
		public const int SCLEX_CPP = 3;
		public const int SCLEX_HTML = 4;
		public const int SCLEX_XML = 5;
		public const int SCLEX_PERL = 6;
		public const int SCLEX_SQL = 7;
		public const int SCLEX_VB = 8;
		public const int SCLEX_PROPERTIES = 9;
		public const int SCLEX_ERRORLIST = 10;
		public const int SCLEX_MAKEFILE = 11;
		public const int SCLEX_BATCH = 12;
		public const int SCLEX_LATEX = 14;
		public const int SCLEX_LUA = 15;
		public const int SCLEX_DIFF = 16;
		public const int SCLEX_CONF = 17;
		public const int SCLEX_PASCAL = 18;
		public const int SCLEX_AVE = 19;
		public const int SCLEX_ADA = 20;
		public const int SCLEX_LISP = 21;
		public const int SCLEX_RUBY = 22;
		public const int SCLEX_EIFFEL = 23;
		public const int SCLEX_EIFFELKW = 24;
		public const int SCLEX_TCL = 25;
		public const int SCLEX_NNCRONTAB = 26;
		public const int SCLEX_BULLANT = 27;
		public const int SCLEX_VBSCRIPT = 28;
		public const int SCLEX_ASP = SCLEX_HTML;
		public const int SCLEX_PHP = SCLEX_HTML;
		public const int SCLEX_BAAN = 31;
		public const int SCLEX_MATLAB = 32;
		public const int SCLEX_SCRIPTOL = 33;
		public const int SCLEX_ASM = 34;
		public const int SCLEX_CPPNOCASE = 35;
		public const int SCLEX_FORTRAN = 36;
		public const int SCLEX_F77 = 37;
		public const int SCLEX_CSS = 38;
		public const int SCLEX_POV = 39;
		public const int SCLEX_LOUT = 40;
		public const int SCLEX_ESCRIPT = 41;
		public const int SCLEX_PS = 42;
		public const int SCLEX_NSIS = 43;
		public const int SCLEX_MMIXAL = 44;
		public const int SCLEX_CLW = 45;
		public const int SCLEX_CLWNOCASE = 46;
		public const int SCLEX_LOT = 47;
		public const int SCLEX_YAML = 48;
		public const int SCLEX_TEX = 49;
		public const int SCLEX_METAPOST = 50;
		public const int SCLEX_POWERBASIC = 51;
		public const int SCLEX_FORTH = 52;
		public const int SCLEX_ERLANG = 53;
		public const int SCLEX_OCTAVE = 54;
		public const int SCLEX_MSSQL = 55;
		public const int SCLEX_VERILOG = 56;
		public const int SCLEX_KIX = 57;
		public const int SCLEX_GUI4CLI = 58;
		public const int SCLEX_SPECMAN = 59;
		public const int SCLEX_AU3 = 60;
		public const int SCLEX_APDL = 61;
		public const int SCLEX_BASH = 62;
		public const int SCLEX_ASN1 = 63;
		public const int SCLEX_VHDL = 64;
		public const int SCLEX_CAML = 65;
		public const int SCLEX_BLITZBASIC = 66;
		public const int SCLEX_PUREBASIC = 67;
		public const int SCLEX_HASKELL = 68;
		public const int SCLEX_PHPSCRIPT = 69;
		public const int SCLEX_TADS3 = 70;
		public const int SCLEX_REBOL = 71;
		public const int SCLEX_SMALLTALK = 72;
		public const int SCLEX_FLAGSHIP = 73;
		public const int SCLEX_CSOUND = 74;
		public const int SCLEX_FREEBASIC = 75;
		public const int SCLEX_INNOSETUP = 76;
		public const int SCLEX_OPAL = 77;
		public const int SCLEX_SPICE = 78;
		public const int SCLEX_D = 79;
		public const int SCLEX_CMAKE = 80;
		public const int SCLEX_GAP = 81;
		public const int SCLEX_PLM = 82;
		public const int SCLEX_PROGRESS = 83;
		public const int SCLEX_ABAQUS = 84;
		public const int SCLEX_ASYMPTOTE = 85;
		public const int SCLEX_R = 86;

		// long SendScintilla(unsigned int arg1,unsigned long arg2,void* arg3); >>>> NOT CONVERTED
		// void* SendScintillaPtrResult(unsigned int arg1); >>>> NOT CONVERTED
		public QsciScintillaBase(QWidget parent) : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QsciScintillaBase#", "QsciScintillaBase(QWidget*)", typeof(void), typeof(QWidget), parent);
		}
		public QsciScintillaBase() : this((Type) null) {
			CreateProxy();
			interceptor.Invoke("QsciScintillaBase", "QsciScintillaBase()", typeof(void));
		}
		public long SendScintilla(uint msg, ulong wParam, long lParam) {
			return (long) interceptor.Invoke("SendScintilla$$$", "SendScintilla(unsigned int, unsigned long, long) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam, typeof(long), lParam);
		}
		public long SendScintilla(uint msg, ulong wParam) {
			return (long) interceptor.Invoke("SendScintilla$$", "SendScintilla(unsigned int, unsigned long) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam);
		}
		public long SendScintilla(uint msg) {
			return (long) interceptor.Invoke("SendScintilla$", "SendScintilla(unsigned int) const", typeof(long), typeof(uint), msg);
		}
		public long SendScintilla(uint msg, ulong wParam, string lParam) {
			return (long) interceptor.Invoke("SendScintilla$$$", "SendScintilla(unsigned int, unsigned long, const char*) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam, typeof(string), lParam);
		}
		public long SendScintilla(uint msg, string lParam) {
			return (long) interceptor.Invoke("SendScintilla$$", "SendScintilla(unsigned int, const char*) const", typeof(long), typeof(uint), msg, typeof(string), lParam);
		}
		public long SendScintilla(uint msg, string wParam, string lParam) {
			return (long) interceptor.Invoke("SendScintilla$$$", "SendScintilla(unsigned int, const char*, const char*) const", typeof(long), typeof(uint), msg, typeof(string), wParam, typeof(string), lParam);
		}
		public long SendScintilla(uint msg, long wParam) {
			return (long) interceptor.Invoke("SendScintilla$$", "SendScintilla(unsigned int, long) const", typeof(long), typeof(uint), msg, typeof(long), wParam);
		}
		public long SendScintilla(uint msg, int wParam) {
			return (long) interceptor.Invoke("SendScintilla$$", "SendScintilla(unsigned int, int) const", typeof(long), typeof(uint), msg, typeof(int), wParam);
		}
		public long SendScintilla(uint msg, long cpMin, long cpMax, string lpstrText) {
			return (long) interceptor.Invoke("SendScintilla$$$$", "SendScintilla(unsigned int, long, long, char*) const", typeof(long), typeof(uint), msg, typeof(long), cpMin, typeof(long), cpMax, typeof(string), lpstrText);
		}
		public long SendScintilla(uint msg, ulong wParam, QColor col) {
			return (long) interceptor.Invoke("SendScintilla$$#", "SendScintilla(unsigned int, unsigned long, const QColor&) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam, typeof(QColor), col);
		}
		public long SendScintilla(uint msg, QColor col) {
			return (long) interceptor.Invoke("SendScintilla$#", "SendScintilla(unsigned int, const QColor&) const", typeof(long), typeof(uint), msg, typeof(QColor), col);
		}
		public long SendScintilla(uint msg, ulong wParam, QPainter hdc, QRect rc, long cpMin, long cpMax) {
			return (long) interceptor.Invoke("SendScintilla$$##$$", "SendScintilla(unsigned int, unsigned long, QPainter*, const QRect&, long, long) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam, typeof(QPainter), hdc, typeof(QRect), rc, typeof(long), cpMin, typeof(long), cpMax);
		}
		public long SendScintilla(uint msg, ulong wParam, QPixmap lParam) {
			return (long) interceptor.Invoke("SendScintilla$$#", "SendScintilla(unsigned int, unsigned long, const QPixmap&) const", typeof(long), typeof(uint), msg, typeof(ulong), wParam, typeof(QPixmap), lParam);
		}
		[SmokeMethod("contextMenuEvent(QContextMenuEvent*)")]
		protected override void ContextMenuEvent(QContextMenuEvent e) {
			interceptor.Invoke("contextMenuEvent#", "contextMenuEvent(QContextMenuEvent*)", typeof(void), typeof(QContextMenuEvent), e);
		}
		[SmokeMethod("dragEnterEvent(QDragEnterEvent*)")]
		protected override void DragEnterEvent(QDragEnterEvent e) {
			interceptor.Invoke("dragEnterEvent#", "dragEnterEvent(QDragEnterEvent*)", typeof(void), typeof(QDragEnterEvent), e);
		}
		[SmokeMethod("dragLeaveEvent(QDragLeaveEvent*)")]
		protected override void DragLeaveEvent(QDragLeaveEvent e) {
			interceptor.Invoke("dragLeaveEvent#", "dragLeaveEvent(QDragLeaveEvent*)", typeof(void), typeof(QDragLeaveEvent), e);
		}
		[SmokeMethod("dragMoveEvent(QDragMoveEvent*)")]
		protected override void DragMoveEvent(QDragMoveEvent e) {
			interceptor.Invoke("dragMoveEvent#", "dragMoveEvent(QDragMoveEvent*)", typeof(void), typeof(QDragMoveEvent), e);
		}
		[SmokeMethod("dropEvent(QDropEvent*)")]
		protected override void DropEvent(QDropEvent e) {
			interceptor.Invoke("dropEvent#", "dropEvent(QDropEvent*)", typeof(void), typeof(QDropEvent), e);
		}
		[SmokeMethod("focusInEvent(QFocusEvent*)")]
		protected override void FocusInEvent(QFocusEvent e) {
			interceptor.Invoke("focusInEvent#", "focusInEvent(QFocusEvent*)", typeof(void), typeof(QFocusEvent), e);
		}
		[SmokeMethod("focusOutEvent(QFocusEvent*)")]
		protected override void FocusOutEvent(QFocusEvent e) {
			interceptor.Invoke("focusOutEvent#", "focusOutEvent(QFocusEvent*)", typeof(void), typeof(QFocusEvent), e);
		}
		[SmokeMethod("focusNextPrevChild(bool)")]
		protected override bool FocusNextPrevChild(bool next) {
			return (bool) interceptor.Invoke("focusNextPrevChild$", "focusNextPrevChild(bool)", typeof(bool), typeof(bool), next);
		}
		[SmokeMethod("keyPressEvent(QKeyEvent*)")]
		protected override void KeyPressEvent(QKeyEvent e) {
			interceptor.Invoke("keyPressEvent#", "keyPressEvent(QKeyEvent*)", typeof(void), typeof(QKeyEvent), e);
		}
		[SmokeMethod("inputMethodEvent(QInputMethodEvent*)")]
		protected override void InputMethodEvent(QInputMethodEvent e) {
			interceptor.Invoke("inputMethodEvent#", "inputMethodEvent(QInputMethodEvent*)", typeof(void), typeof(QInputMethodEvent), e);
		}
		[SmokeMethod("mouseDoubleClickEvent(QMouseEvent*)")]
		protected override void MouseDoubleClickEvent(QMouseEvent e) {
			interceptor.Invoke("mouseDoubleClickEvent#", "mouseDoubleClickEvent(QMouseEvent*)", typeof(void), typeof(QMouseEvent), e);
		}
		[SmokeMethod("mouseMoveEvent(QMouseEvent*)")]
		protected override void MouseMoveEvent(QMouseEvent e) {
			interceptor.Invoke("mouseMoveEvent#", "mouseMoveEvent(QMouseEvent*)", typeof(void), typeof(QMouseEvent), e);
		}
		[SmokeMethod("mousePressEvent(QMouseEvent*)")]
		protected override void MousePressEvent(QMouseEvent e) {
			interceptor.Invoke("mousePressEvent#", "mousePressEvent(QMouseEvent*)", typeof(void), typeof(QMouseEvent), e);
		}
		[SmokeMethod("mouseReleaseEvent(QMouseEvent*)")]
		protected override void MouseReleaseEvent(QMouseEvent e) {
			interceptor.Invoke("mouseReleaseEvent#", "mouseReleaseEvent(QMouseEvent*)", typeof(void), typeof(QMouseEvent), e);
		}
		[SmokeMethod("paintEvent(QPaintEvent*)")]
		protected override void PaintEvent(QPaintEvent e) {
			interceptor.Invoke("paintEvent#", "paintEvent(QPaintEvent*)", typeof(void), typeof(QPaintEvent), e);
		}
		[SmokeMethod("resizeEvent(QResizeEvent*)")]
		protected override void ResizeEvent(QResizeEvent e) {
			interceptor.Invoke("resizeEvent#", "resizeEvent(QResizeEvent*)", typeof(void), typeof(QResizeEvent), e);
		}
		[SmokeMethod("scrollContentsBy(int, int)")]
		protected override void ScrollContentsBy(int dx, int dy) {
			interceptor.Invoke("scrollContentsBy$$", "scrollContentsBy(int, int)", typeof(void), typeof(int), dx, typeof(int), dy);
		}
		~QsciScintillaBase() {
			interceptor.Invoke("~QsciScintillaBase", "~QsciScintillaBase()", typeof(void));
		}
		public new void Dispose() {
			interceptor.Invoke("~QsciScintillaBase", "~QsciScintillaBase()", typeof(void));
		}
		public static new string Tr(string s, string c) {
			return (string) staticInterceptor.Invoke("tr$$", "tr(const char*, const char*)", typeof(string), typeof(string), s, typeof(string), c);
		}
		public static new string Tr(string s) {
			return (string) staticInterceptor.Invoke("tr$", "tr(const char*)", typeof(string), typeof(string), s);
		}
		public static QsciScintillaBase Pool() {
			return (QsciScintillaBase) staticInterceptor.Invoke("pool", "pool()", typeof(QsciScintillaBase));
		}
		protected new IQsciScintillaBaseSignals Emit {
			get { return (IQsciScintillaBaseSignals) Q_EMIT; }
		}
	}

	public interface IQsciScintillaBaseSignals : IQAbstractScrollAreaSignals {
		[Q_SIGNAL("void QSCN_SELCHANGED(bool)")]
		void QSCN_SELCHANGED(bool yes);
		[Q_SIGNAL("void SCN_AUTOCSELECTION(const char*, int)")]
		void SCN_AUTOCSELECTION(string selection, int position);
		[Q_SIGNAL("void SCEN_CHANGE()")]
		void SCEN_CHANGE();
		[Q_SIGNAL("void SCN_CALLTIPCLICK(int)")]
		void SCN_CALLTIPCLICK(int direction);
		[Q_SIGNAL("void SCN_CHARADDED(int)")]
		void SCN_CHARADDED(int charadded);
		[Q_SIGNAL("void SCN_DOUBLECLICK(int, int, int)")]
		void SCN_DOUBLECLICK(int position, int line, int modifiers);
		[Q_SIGNAL("void SCN_DWELLEND(int, int, int)")]
		void SCN_DWELLEND(int arg1, int arg2, int arg3);
		[Q_SIGNAL("void SCN_DWELLSTART(int, int, int)")]
		void SCN_DWELLSTART(int arg1, int arg2, int arg3);
		[Q_SIGNAL("void SCN_HOTSPOTCLICK(int, int)")]
		void SCN_HOTSPOTCLICK(int position, int modifiers);
		[Q_SIGNAL("void SCN_HOTSPOTDOUBLECLICK(int, int)")]
		void SCN_HOTSPOTDOUBLECLICK(int position, int modifiers);
		[Q_SIGNAL("void SCN_INDICATORCLICK(int, int)")]
		void SCN_INDICATORCLICK(int position, int modifiers);
		[Q_SIGNAL("void SCN_INDICATORRELEASE(int, int)")]
		void SCN_INDICATORRELEASE(int position, int modifiers);
		// void SCN_MACRORECORD(unsigned arg1,long arg2,void* arg3); >>>> NOT CONVERTED
		[Q_SIGNAL("void SCN_MARGINCLICK(int, int, int)")]
		void SCN_MARGINCLICK(int position, int modifiers, int margin);
		[Q_SIGNAL("void SCN_MODIFIED(int, int, const char*, int, int, int, int, int)")]
		void SCN_MODIFIED(int arg1, int arg2, string arg3, int arg4, int arg5, int arg6, int arg7, int arg8);
		[Q_SIGNAL("void SCN_MODIFYATTEMPTRO()")]
		void SCN_MODIFYATTEMPTRO();
		[Q_SIGNAL("void SCN_NEEDSHOWN(int, int)")]
		void SCN_NEEDSHOWN(int arg1, int arg2);
		[Q_SIGNAL("void SCN_PAINTED()")]
		void SCN_PAINTED();
		[Q_SIGNAL("void SCN_SAVEPOINTLEFT()")]
		void SCN_SAVEPOINTLEFT();
		[Q_SIGNAL("void SCN_SAVEPOINTREACHED()")]
		void SCN_SAVEPOINTREACHED();
		[Q_SIGNAL("void SCN_STYLENEEDED(int)")]
		void SCN_STYLENEEDED(int position);
		[Q_SIGNAL("void SCN_UPDATEUI()")]
		void SCN_UPDATEUI();
		[Q_SIGNAL("void SCN_USERLISTSELECTION(const char*, int)")]
		void SCN_USERLISTSELECTION(string arg1, int arg2);
		[Q_SIGNAL("void SCN_ZOOM()")]
		void SCN_ZOOM();
	}
}
