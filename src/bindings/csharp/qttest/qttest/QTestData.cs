//Auto-generated by kalyptus. DO NOT EDIT.
namespace Qyoto {
    using System;
    [SmokeClass("QTestData")]
    public class QTestData : Object {
        protected SmokeInvocation interceptor = null;
        private IntPtr smokeObject;
        protected QTestData(Type dummy) {}
        protected void CreateProxy() {
            interceptor = new SmokeInvocation(typeof(QTestData), this);
        }
        // void append(int arg1,const void* arg2); >>>> NOT CONVERTED
        // void* data(int arg1); >>>> NOT CONVERTED
        // QTestTable* parent(); >>>> NOT CONVERTED
        public string DataTag() {
            return (string) interceptor.Invoke("dataTag", "dataTag() const", typeof(string));
        }
        public int DataCount() {
            return (int) interceptor.Invoke("dataCount", "dataCount() const", typeof(int));
        }
    }
}
