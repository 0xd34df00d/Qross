/** @section ruby The Ruby interpreter backend
 *
 * The Ruby interpreter backend implements scripting with Ruby.
 *
 * The @a Qross::RubyInterpreter class implements @a Qross::Interpreter
 * for the Ruby interpreter backend and provides with the
 * @a Qross::RubyInterpreter::createScript a factory method to create
 * @a Qross::RubyScript instances.
 *
 * The @a Qross::RubyScript class implements @a Qross::Script for the
 * Ruby backend to provide the functionality to execute Ruby code
 * within a script-container.
 *
 * The @a Qross::RubyModule class is the __main__ Ruby environment used
 * as global object namespace. This module is shared between the different
 * @a Qross::RubyScript instances which run in there own module namespace.
 * The @a Qross::RubyModule also spends access to the whole Qross
 * functionality and manages all the @a Qross::RubyExtension modules.
 *
 * The @a Qross::RubyExtension class implements a Ruby VALUE object to wrap a
 * QObject instance into the world of Ruby.
 *
 * Within RubyVariant the @a Qross::RubyType helper class is used to cast
 * between QVariant and Ruby VALUE values while the @a Qross::RubyMetaTypeFactory
 * helper class is used as factory within @a Qross::RubyExtension to translate
 * an argument into a @a Qross::MetaType needed for QGenericArgument's data pointer.
 */
